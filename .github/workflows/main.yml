name: Auto Build & Test Based on Language

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

jobs:
  autodetect:
    runs-on: ubuntu-latest

    outputs:
      lang: ${{ steps.detect.outputs.lang }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Detect Language & Set Output
        id: detect
        run: |
          if [ -f "package.json" ]; then
            echo "lang=node" >> $GITHUB_ENV
            echo "lang=node" >> $GITHUB_ENV
            echo "lang=node" >> $GITHUB_OUTPUT
          elif [ -f "requirements.txt" ] || [ -f "pyproject.toml" ]; then
            echo "lang=python" >> $GITHUB_ENV
            echo "lang=python" >> $GITHUB_OUTPUT
          elif [ -f "pom.xml" ]; then
            echo "lang=java" >> $GITHUB_ENV
            echo "lang=java" >> $GITHUB_OUTPUT
          elif ls *.go 1> /dev/null 2>&1; then
            echo "lang=go" >> $GITHUB_ENV
            echo "lang=go" >> $GITHUB_OUTPUT
          else
            echo "lang=unknown" >> $GITHUB_ENV
            echo "lang=unknown" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        if: env.lang == 'node'
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup Python
        if: env.lang == 'python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup Java
        if: env.lang == 'java'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Go
        if: env.lang == 'go'
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build & Test Node.js
        if: env.lang == 'node'
        run: |
          npm install --legacy-peer-deps
          npm run build || true
          npm test || true

      - name: Build & Test Python
        if: env.lang == 'python'
        run: |
          pip install -r requirements.txt || true
          python -m unittest discover || true

      - name: Build & Test Java (Maven)
        if: env.lang == 'java'
        run: |
          mvn clean install || true

      - name: Build & Test Go
        if: env.lang == 'go'
        run: |
          go mod tidy || true
          go build ./...
          go test ./... || true

      - name: Fallback for unknown languages
        if: env.lang == 'unknown'
        run: echo "‚ùå No known language build system detected."
